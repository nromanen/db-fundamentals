--Show the list of French customers’ names who are working in the same cities.

select  distinct c.contact_name, c.city 
from customers c 
inner join customers c2 
on c.city = c.city 
where c.country = 'France' and c.city = c2.city and c.contact_name  <> c2.contact_name 
order by c.city 

--Show the list of German suppliers’ names who are not working in the same cities.

select distinct  s.contact_name , s.city 
from suppliers s 
inner join suppliers s2 
on s.country = s2.country 
where  s.country = 'Germany' and s.city <> s2.city  

--Show the count of orders made by each customer from France.

select c.contact_name , count(o.*) as ordercounting
from orders o 
inner join customers c 
on o.customer_id  = c.customer_id 
where c.country = 'France'
group by c.contact_name
order by count(o.*) desc

--Show the list of French customers’ names who have made more than one order

select c.contact_name , count(o.*) as ordercounting
from orders o 
inner join customers c 
on o.customer_id  = c.customer_id 
where c.country = 'France'
group by c.contact_name
having count(o.*) > 1
order by count(o.*) desc

--Show the list of customers’ names who used to order the ‘Tofu’ product.

select distinct  c.contact_name , p.product_name 
from customers c 
inner join orders o 
on c.customer_id  = o.customer_id 
inner join order_details od 
on o.order_id  = od.order_id 
inner join products p 
on p.product_id = od.product_id 
where p.product_name = 'Tofu'

--Show the list of French customers’ names who used to order non-French products.

select distinct  c.contact_name,c.country, p.product_name , s.country 
from customers c 
inner join orders o 
on c.customer_id  = o.customer_id 
inner join order_details od 
on o.order_id  = od.order_id 
inner join products p 
on p.product_id = od.product_id 
inner join suppliers s 
on p.supplier_id = s.supplier_id 
where c.country = 'France' and s.country <> 'France'

--Show the list of French customers’ names who used to order French products.

select distinct  c.contact_name,c.country, p.product_name , s.country 
from customers c 
inner join orders o 
on c.customer_id  = o.customer_id 
inner join order_details od 
on o.order_id  = od.order_id 
inner join products p 
on p.product_id = od.product_id 
inner join suppliers s 
on p.supplier_id = s.supplier_id 
where c.country = 'France' and s.country = 'France'

--Show the total ordering sum calculated for each country of customer.

select c.country , sum(od.unit_price * od.quantity)::numeric(10,2) 
from customers c 
inner join orders o 
on c.customer_id = o.customer_id 
inner join order_details od 
on od.order_id = o.order_id 
group by c.country 

--Show the list of product categories along with total ordering sums calculated for the orders made for the products of each category, during the year 1997.

select c.category_id ,c.category_name , sum(od.unit_price * od.quantity )::numeric(10,2) as ordersum 
from categories c 
inner join products p 
on c.category_id  = p.category_id 
inner join order_details od 
on od.product_id = p.product_id 
inner join orders o 
on o.order_id  = od.order_id 
where extract(year from o.order_date) = 1997
group by c.category_id ,c.category_name 
order by c.category_id 

--Show the list of product names along with unit prices and the history of unit prices taken from the orders (show ‘Product name – Unit price – Historical price’). The duplicate records should be eliminated. If no orders were made for a certain product, then the result for this product should look like ‘Product name – Unit price – NULL’. Sort the list by the product name.

select distinct  p.product_name ,od.unit_price , p.unit_price as Historicalprice 
from products p 
left join order_details od 
on p.product_id  = od.product_id
order by p.product_name 
