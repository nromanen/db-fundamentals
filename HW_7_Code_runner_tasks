
--TASKS FROM CODERUNNER--

--Show the list of customers’ names who used to order the ‘Tofu’ product (use a subquery).

select c.contact_name
from customers c
where c.customer_id in (
	select o.customer_id
	from orders o
	where o.order_id  in (
		select od.order_id
		from order_details od
		where od.product_id = (
			select p.product_id
			from products p
			where p.product_name = 'Tofu'
			)
		)
)



--Show the list of customers’ names who used to order the ‘Tofu’ product,
--along with the total amount of the product they have ordered and with
--the total sum for ordered product calculated.
select c.contact_name, sum(od.quantity), sum(od.unit_price * od.quantity * (1 - od.discount))::numeric(10,2)
from customers c
join orders o on o.customer_id = c.customer_id
join order_details od on o.order_id = od.order_id
and od.product_id = (
	select p.product_id
	from products p
	where p.product_name = 'Tofu'
)
group by c.contact_name
order by c.contact_name



--Show the list of french customers’ names who used to order non-french products (use a subquery).

select distinct c.contact_name from
customers c
where c.customer_id in(
	select o.customer_id
	from orders o
	where o.order_id in(
		select od.order_id
		from order_details od
		where od.product_id in(
			select p.product_id
			from products p
			where supplier_id not in(
				select s.supplier_id
				from suppliers s
				where s.country = 'France'
			)
		)
	)
) and c.country = 'France'





--Show the total ordering sums calculated for each customer’s country for
--domestic and non-domestic products separately (e.g.: “France – French products ordered – Non-french products ordered” and so on for each country).

--code runner doesn't pass
SELECT o.ship_country ,
    SUM(case when o.ship_country = s.country then od.quantity  * od.unit_price  * (1 - od.Discount)::numeric(10,2) end) AS domestic,
    SUM(case when o.ship_country  != s.country then od.quantity  * od.unit_price  * (1 - od.Discount)::numeric(10,2) end) AS non_domestic
FROM orders o
JOIN order_details od ON o.order_id = od.order_id
JOIN (
    SELECT p.product_id, sup.country
    FROM products p
    JOIN suppliers sup ON p.supplier_id = sup.supplier_id
) s ON od.product_id  = s.product_id
GROUP BY o.ship_country
ORDER BY o.ship_country;




